apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-python-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-python-app
  template:
    metadata:
      labels:
        app: my-python-app
    spec:
      containers:
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
        command: ["/cloud_sql_proxy",
                  "-instances=apythonapp-424421:northamerica-northeast1:pythondb=tcp:5432",
                  "-credential_file=/secrets/credentials.json"]
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /secrets
          readOnly: true
      - name: my-python-app
        image: gcr.io/apythonapp-424421/python-app:latest
        ports:
        - containerPort: 5000
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_PASSWORD

      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials

---
apiVersion: v1
kind: Service
metadata:
  name: my-python-app-service
spec:
  type: LoadBalancer
  selector:
    app: my-python-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
